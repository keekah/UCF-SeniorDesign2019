Authentication
        Registration
        Login


Content Management System
        
Group Allocation
        Creation of accounts
        Edit account info
        Term creation
        Edit term info
        Project creation
        Edit project info
        Get term status
        Assignment 0 submission
        Get term student and group info for spreadsheet view
        Call algorithm 


Variables for algorithm
student:
        Name: string,
        CanDoSummer: bit, //only for students taking sd1 in the spring
        CanDoFall: bit, //only for students taking sd1 in the spring
        PriorityList: list of ints,
        AttendedBootcamp: bit,
        GPA: int,

project:
        ID: int,
        Name: string,
        Min: int,
        Max: int,
        CanBeSummer: bit //only for projects starting in the spring
        CanBeFall: bit //only for projects starting in the spring


________________


//Scheduler 
Public httpResponse LoginUser()
{
Input: LoginModel
{
Username: string,
Password: string,
//RemeberMe: bit (May not be needed)
}
Return: LoginReturnModel
{
        UserID: int,
        GroupID: int,
        RoleID: int,
        FirstName: string, 
        MiddleName: string, 
        LastName: string, 
        Email: string,
}
        
}
//Scheduler
Public RegisterUsers()
{
        Input: FileUpload (not fully determined)
        Return
{
        Success: HttpResponse(200), 
        Fail: HttpResponse(400),
}
}
















//Scheduler
Public SubmitAssignmentZero()
{
Input: AssignmentZeroModel
{


}
Return:
{
        Success: HttpResponse(200), 
        Fail: HttpResponse(400),
}

}
//Scheduler
Public GetGroupInformation()
{
        Input: (Should be nothing since backend can grab session)
        Return: GroupModel
        {
                GroupID: int,
		GroupName: string,
		Acronym(?): string,
		Description: string,        
		GroupMembers: List<UserModel>,
        }
}
//Scheduler
Public SubmitProject()
{
        Input: ProjectModel
        {
                ProjectName: string,
                SponsorID: int,
                SemesterID: int,
                
        }
        
}